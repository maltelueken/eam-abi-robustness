# @package _global_

hydra:
  run:
    dir: outputs/${hydra:runtime.choices.experiment}/${hydra:runtime.choices.model}/${hydra:runtime.choices.method}/${hydra.job.override_dirname}
  sweep:
    dir: multirun
    subdir: ${hydra:runtime.choices.experiment}/${hydra:runtime.choices.model}/${hydra:runtime.choices.method}/${hydra.job.override_dirname}
  job:
    chdir: True
    env_set:
      KERAS_BACKEND: jax
    config:
      override_dirname:
        exclude_keys:
          - experiment
          - model
          - method
  job_logging:
    handlers:
      file:
        mode: w

defaults:
  - override /model: rdm_simple
  - override /method: flow_matching

seed: 2024

diag_batch_size: 100
diag_sbc_num_posterior_samples: 100
diag_sens_num_posterior_samples: 100

diag_num_obs:
  _target_: numpy.array
  object: ${simulator.design_fun.values}

epochs: 100
iterations_per_epoch: 500
batch_size: 64

test_batch_size: 100
test_transform: true
test_num_posterior_samples: 2000

psrf_threshold: 1.01

test_num_obs:
  _target_: numpy.array
  object: # ${trainer.generative_model.simulator.context_generator.non_batchable_context_fun.values}
    - 1000

mcmc_model_fun:
  _target_: pymc_models.rdm_model_simple
  _partial_: true

mcmc_sampler: blackjax.nuts

mcmc_sampling_fun:
  _target_: pymc_models.run_mcmc
  _partial_: true
  _convert_: object
  init_position:
    _target_: numpy.array
    object:
      - 1
      - 2
      - 1
      - 1
      - 0.2
  num_chains: 4
  num_steps_warmup: 2000
  num_steps_sampling: ${test_num_posterior_samples}
  rng_key:
    _target_: jax.random.key
    seed: ${seed}